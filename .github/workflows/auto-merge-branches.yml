name: Auto Merge branches

on:
  push:
    branches:
      - release/*
  workflow_dispatch: 

jobs:
  merge-branches:
    runs-on: ubuntu-latest
    outputs:
      conflict_branches: ${{ steps.merge-branches.outputs.conflict_branches }}
      conflict_files: ${{ steps.merge-branches.outputs.conflict_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Set e-mail and username
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"

      - name: Merge branches in sequence
        id: merge-branches
        run: |
          branches_string="${{ vars.MERGE_BRANCHES }}"
          IFS=',' read -ra branches <<< "$branches_string"  
          for ((i = 0; i < ${#branches[@]} - 1; i++)); do
            current="${branches[i]}"
            next="${branches[i+1]}"
            
            echo "------------ Merging $current into $next ------------"
            git fetch origin "$current"
            git fetch origin "$next"
            git checkout "$next"
            if ! git merge origin/"$current"; then
              echo "------------ Merging failed, $current into $next ------------"
              echo "------------ Conflict Files ------------"
              IFS=$'\n' read -r -a conflict_files_array <<< "$(git ls-files -u | cut -f 2 | sort -u)"
              conflict_files_csv=$(IFS=','; echo "${conflict_files_array[*]}")
              echo "conflict_files=$conflict_files_csv" >> $GITHUB_ENV

              echo $conflict_files_csv

              echo "------------ Conflict Branches ------------"
              echo "conflict_branches=$current into $next" >> $GITHUB_ENV
              exit 1
            fi
            git push origin "$next"
          done

  merge-failed:
    runs-on: ubuntu-latest
    needs: merge-branches
    if: failure()
    steps:
      - name: echo failed message
        run: |
          echo "Merging failed, please resolve conflicts and try again"
          echo "${{ needs.merge-branches.outputs.conflict_branches }}"
          IFS=',' read -r -a conflict_files <<< "${{ needs.merge-branches.outputs.conflict_files }}"
          for file in "${conflict_files[@]}"; do
            echo "$file"
          done